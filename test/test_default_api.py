# coding: utf-8

"""
    Wavenet Connected API

    Provides a primary resource for buildings, room tenancies for Wavenet connected customers, includes other information such as VLAN information and addresses

    The version of the OpenAPI document: 2.5.x
    Contact: development@wavenetuk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi  # noqa: E501


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_bulk_create_buildings(self) -> None:
        """Test case for bulk_create_buildings

        """
        pass

    def test_bulk_create_rooms(self) -> None:
        """Test case for bulk_create_rooms

        """
        pass

    def test_create_building(self) -> None:
        """Test case for create_building

        """
        pass

    def test_create_building_operator(self) -> None:
        """Test case for create_building_operator

        """
        pass

    def test_create_room(self) -> None:
        """Test case for create_room

        """
        pass

    def test_create_tenancy(self) -> None:
        """Test case for create_tenancy

        """
        pass

    def test_delete_building(self) -> None:
        """Test case for delete_building

        """
        pass

    def test_delete_building_operator(self) -> None:
        """Test case for delete_building_operator

        """
        pass

    def test_delete_room(self) -> None:
        """Test case for delete_room

        """
        pass

    def test_delete_tenancy(self) -> None:
        """Test case for delete_tenancy

        """
        pass

    def test_get_building_by_id(self) -> None:
        """Test case for get_building_by_id

        """
        pass

    def test_get_building_operator_by_id(self) -> None:
        """Test case for get_building_operator_by_id

        """
        pass

    def test_get_building_operator_with_buildings(self) -> None:
        """Test case for get_building_operator_with_buildings

        """
        pass

    def test_get_building_operators(self) -> None:
        """Test case for get_building_operators

        """
        pass

    def test_get_building_operators_with_buildings(self) -> None:
        """Test case for get_building_operators_with_buildings

        """
        pass

    def test_get_building_with_associations(self) -> None:
        """Test case for get_building_with_associations

        """
        pass

    def test_get_building_with_operator(self) -> None:
        """Test case for get_building_with_operator

        """
        pass

    def test_get_building_with_rooms(self) -> None:
        """Test case for get_building_with_rooms

        """
        pass

    def test_get_buildings(self) -> None:
        """Test case for get_buildings

        """
        pass

    def test_get_buildings_tenancy_history(self) -> None:
        """Test case for get_buildings_tenancy_history

        """
        pass

    def test_get_buildings_with_associations(self) -> None:
        """Test case for get_buildings_with_associations

        """
        pass

    def test_get_buildings_with_operator(self) -> None:
        """Test case for get_buildings_with_operator

        """
        pass

    def test_get_buildings_with_rooms(self) -> None:
        """Test case for get_buildings_with_rooms

        """
        pass

    def test_get_room_by_id(self) -> None:
        """Test case for get_room_by_id

        """
        pass

    def test_get_room_with_associations(self) -> None:
        """Test case for get_room_with_associations

        """
        pass

    def test_get_room_with_tenancies(self) -> None:
        """Test case for get_room_with_tenancies

        """
        pass

    def test_get_rooms(self) -> None:
        """Test case for get_rooms

        """
        pass

    def test_get_rooms_with_associations(self) -> None:
        """Test case for get_rooms_with_associations

        """
        pass

    def test_get_rooms_with_building(self) -> None:
        """Test case for get_rooms_with_building

        """
        pass

    def test_get_rooms_with_building_0(self) -> None:
        """Test case for get_rooms_with_building_0

        """
        pass

    def test_get_rooms_with_tenancies(self) -> None:
        """Test case for get_rooms_with_tenancies

        """
        pass

    def test_get_tenancies(self) -> None:
        """Test case for get_tenancies

        """
        pass

    def test_get_tenancies_with_associations(self) -> None:
        """Test case for get_tenancies_with_associations

        """
        pass

    def test_get_tenancies_with_room(self) -> None:
        """Test case for get_tenancies_with_room

        """
        pass

    def test_get_tenancy_by_id(self) -> None:
        """Test case for get_tenancy_by_id

        """
        pass

    def test_get_tenancy_with_associations(self) -> None:
        """Test case for get_tenancy_with_associations

        """
        pass

    def test_get_tenancy_with_room(self) -> None:
        """Test case for get_tenancy_with_room

        """
        pass

    def test_put_building(self) -> None:
        """Test case for put_building

        """
        pass

    def test_put_building_operator(self) -> None:
        """Test case for put_building_operator

        """
        pass

    def test_put_room(self) -> None:
        """Test case for put_room

        """
        pass

    def test_update_building(self) -> None:
        """Test case for update_building

        """
        pass

    def test_update_building_operator(self) -> None:
        """Test case for update_building_operator

        """
        pass

    def test_update_room(self) -> None:
        """Test case for update_room

        """
        pass

    def test_update_tenancy(self) -> None:
        """Test case for update_tenancy

        """
        pass

    def test_update_tenancy_0(self) -> None:
        """Test case for update_tenancy_0

        """
        pass


if __name__ == '__main__':
    unittest.main()
