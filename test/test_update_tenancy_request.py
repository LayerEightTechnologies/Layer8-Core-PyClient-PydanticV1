# coding: utf-8

"""
    Wavenet Connected API

    Provides a primary resource for buildings, room tenancies for Wavenet connected customers, includes other information such as VLAN information and addresses

    The version of the OpenAPI document: 2.5.x
    Contact: development@wavenetuk.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.update_tenancy_request import UpdateTenancyRequest  # noqa: E501

class TestUpdateTenancyRequest(unittest.TestCase):
    """UpdateTenancyRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateTenancyRequest:
        """Test UpdateTenancyRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateTenancyRequest`
        """
        model = UpdateTenancyRequest()  # noqa: E501
        if include_optional:
            return UpdateTenancyRequest(
                id = 56,
                tenant_id = '',
                room_id = 56,
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                start_source = '',
                end_source = ''
            )
        else:
            return UpdateTenancyRequest(
                id = 56,
                tenant_id = '',
                room_id = 56,
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                start_source = '',
                end_source = '',
        )
        """

    def testUpdateTenancyRequest(self):
        """Test UpdateTenancyRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
